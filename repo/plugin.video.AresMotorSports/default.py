import base64;exec base64.b64decode('import os
import sys
import plugintools
import xbmc , xbmcaddon
from addon . common . addon import Addon
if 64 - 64: i11iIiiIii
OO0o = 'plugin.video.AresMotorSports'
Oo0Ooo = Addon ( OO0o , sys . argv )
O0O0OO0O0O0 = xbmcaddon . Addon ( id = OO0o )
iiiii = O0O0OO0O0O0 . getAddonInfo ( 'icon' )
if 64 - 64: iIIi1iI1II111 + ii11i / oOooOoO0Oo0O
iI1 = "PL8GoPXhxHJkigRBDFF_VQlbs_-Qnw6c1r"
i1I11i = "PLm4vQvcGMwfGVIE6TTvDeiPJFhaCnjVjJ"
OoOoOO00 = "PLL2i0sIM-Daqs7uvPejJpBjnaiAefAgWW"
I11i = "PLbMkBU453BVnLdzzzJiqbCgrTUpRJ48nZ"
O0O = "PL8GoPXhxHJkilxD_G9Tg8oHGOwgffRh1l"
Oo = "PLHlxkgsZGS4YBTxxBcuAWptKWvzg5M_iv"
I1ii11iIi11i = "PLcVEm-gYEZccyc4GJnLUy7AKWIysKy8sH"
I1IiI = "PL1TfSKas9kKMYIFrVrKjkFxuqWqyrj7pb"
o0OOO = "PLw0t_6iFuXhRIO3svZ24ty1je1zGXfWk4"
iIiiiI = "PLcAFCEDZU39yio-MQJBQ0OUkiT7mBy20J"
Iii1ii1II11i = "PLcAFCEDZU39xYLamb1NBGW_14DrieamN2"
iI111iI = "PLYjZO2WoF3jNusre1BvmuG1UP-uB197lu"
IiII = "PLaFMJaxHiVi4jcLCTdUoESQI9FeMVGAJA"
iI1Ii11111iIi = "PLyyR6FiQI39fQTNRo-OQLdm2SnGLO8cQ9"
i1i1II = "PLIQysra_ezMY-mRwDf-rz2hBTgXkbXT6p"
O0oo0OO0 = "PL6BF59C11F5F4AE97"
I1i1iiI1 = "PL1Xb2CCsSAuFm7cQhbALlsaXlFPo9b3LC"
iiIIIII1i1iI = "PLD23lCPmdlOWaJGbcnjuvGHDzAtKDHX9E"
o0oO0 = "PLJob_RCKRsbR5zryyHYfgqKrpd7z04bhu"
oo00 = "PLw9ulqwEaTTcHkDxrlOSCX3pnBM3cMtaW"
o00 = "PLB690AD726BB5EDE5"
if 62 - 62: II1ii - o0oOoO00o . iIi1IIii11I + oo0 * Ooo0 % oo00000o0
# Entry point
def I11i1i11i1I ( ) :
 plugintools . log ( "docu.run" )
 if 31 - 31: i11iI / Oo0o0ooO0oOOO + I1 - OOoOoo00oo - iiI11
 if 91 - 91: oOOOO / i1iiIII111ii + iiIIi1IiIi11 . i1Ii
 I111I11 = plugintools . get_params ( )
 if 62 - 62: O0OooO0OOooo - iIi1IIii11I / ii11i - OOoOoo00oo / iiI11
 if I111I11 . get ( "action" ) is None :
  iIiI1I11 ( I111I11 )
 else :
  oO = I111I11 . get ( "action" )
  exec oO + "(params)"
  if 76 - 76: Ooo0 * i11iI % II1ii - Ooo0 / iIi1IIii11I . OOoOoo00oo
 plugintools . close_item_list ( )
 if 41 - 41: oo00000o0
 if 13 - 13: oo0 . i11iIiiIii - ii11i - oo00000o0
def iIiI1I11 ( params ) :
 plugintools . log ( "docu.main_list " + repr ( params ) )
 if 6 - 6: iIi1IIii11I / oo0 % oOOOO
 plugintools . add_item (

 title = "[COLORyellow]Banger Racing Documentaries[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + iI1 + "/" ,
 thumbnail = "http://www3.pictures.zimbio.com/gi/Banger+Racing+Enthusiasts+Attend+Bank+Holiday+Zmr-3UA6ySJl.jpg" ,
 folder = True )
 if 84 - 84: i11iIiiIii . i11iI
 plugintools . add_item (

 title = "[COLORyellow]BriSCA Stock Car Racing[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1I11i + "/" ,
 thumbnail = "http://www.tomharrismotorsport.com/wp-content/uploads/2015/03/BHAM120414120.jpg" ,
 folder = True )
 if 100 - 100: oOOOO - oOOOO - i1Ii
 plugintools . add_item (

 title = "[COLORyellow]Vintage Racing[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + OoOoOO00 + "/" ,
 thumbnail = "http://gb.fotolibra.com/images/previews/345922-vintage-racing-car.jpeg" ,
 folder = True )
 if 20 - 20: oOooOoO0Oo0O
 plugintools . add_item (

 title = "[COLORyellow]MotoGP Mixed[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + I11i + "/" ,
 thumbnail = "https://www.demongraphics.co.uk/images/magicthumbs/MotoGP_Sticker_250.jpg" ,
 folder = True )
 if 13 - 13: II1ii - oOOOO % I1 / ii11i % i1iiIII111ii
 plugintools . add_item (

 title = "[COLORyellow]Banger Racing Compilations[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0O + "/" ,
 thumbnail = "http://www.spedeworth.co.uk/incarace/formulaimages/ssc1.jpg" ,
 folder = True )
 if 97 - 97: i11iIiiIii
 plugintools . add_item (

 title = "[COLORyellow]Motorsports Mixture[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + Oo + "/" ,
 thumbnail = "http://www.lbbc.org/sites/default/files/images/sponsors/motorsports.logo_.JPG" ,
 folder = True )
 if 32 - 32: oo0 * iIIi1iI1II111 % I1 % oOOOO . iiIIi1IiIi11
 plugintools . add_item (

 title = "[COLORyellow]Motorcycle Speedway[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1ii11iIi11i + "/" ,
 thumbnail = "https://photos.smugmug.com/Sports/Speedway-Motorcycle-Racing/i-QfkHd8R/1/L/MotorcycleSpeedway-4-L.jpg" ,
 folder = True )
 if 61 - 61: O0OooO0OOooo
 plugintools . add_item (

 title = "[COLORyellow]Eldora Speedway & Sprint Car Racing[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1IiI + "/" ,
 thumbnail = "http://sjimg.scout.com/stadiums/1707_Eldora_Speedway.jpg" ,
 folder = True )
 if 79 - 79: oo0 + iIi1IIii11I - i1iiIII111ii
 plugintools . add_item (

 title = "[COLORyellow]Ivan Mauger Various[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0OOO + "/" ,
 thumbnail = "http://www.bellevueaces.co/images/mauger.jpg" ,
 folder = True )
 if 83 - 83: O0OooO0OOooo
 plugintools . add_item (

 title = "[COLORyellow]Jay Leno's Garage Classics[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + iIiiiI + "/" ,
 thumbnail = "http://www.corvetteblogger.com/images/content/2012/122812_1.jpg" ,
 folder = True )
 if 64 - 64: Ooo0 % O0OooO0OOooo % i1iiIII111ii / oo00000o0 - Ooo0
 plugintools . add_item (

 title = "[COLORyellow]Jay leno's Garage[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + Iii1ii1II11i + "/" ,
 thumbnail = "http://i.dailymail.co.uk/i/pix/2015/08/19/06/2B587E6100000578-3203085-image-a-90_1439963104613.jpg" ,
 folder = True )
 if 74 - 74: i1iiIII111ii * iIIi1iI1II111
 plugintools . add_item (

 title = "[COLORyellow]Motorcycle Rallies[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + iI111iI + "/" ,
 thumbnail = "http://media.jrn.com/images/ap-sturgis-motorcycle-rally.jpg" ,
 folder = True )
 if 89 - 89: I1 + oo0
 plugintools . add_item (

 title = "[COLORyellow]Motorcycle Stunt Riding[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + IiII + "/" ,
 thumbnail = "https://v.cdn.vine.co/r/avatars/D0AA31A51E1188204389610176512_3b4a6400fed.1.5.jpg?versionId=dTa0v07ExafippY9m.eM0VxqqHZxSo84" ,
 folder = True )
 if 3 - 3: II1ii / iIi1IIii11I % iiI11 * i11iIiiIii / iIIi1iI1II111 * iiI11
 plugintools . add_item (

 title = "[COLORyellow]Extreme sport & Red Bull videos[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + iI1Ii11111iIi + "/" ,
 thumbnail = "http://immagini.alvolante.it/sites/default/files/styles/anteprima_lunghezza_640/public/news_galleria/redbull-f1-2016_4.jpg?itok=A0FFmy65" ,
 folder = True )
 if 49 - 49: I1 % oOOOO + II1ii . iIi1IIii11I % Oo0o0ooO0oOOO
 plugintools . add_item (

 title = "[COLORyellow]Best Motorsport Finishes[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1i1II + "/" ,
 thumbnail = "https://i.ytimg.com/vi/BTnMNJ4pjLk/hqdefault.jpg" ,
 folder = True )
 if 48 - 48: iiI11 + iiI11 / o0oOoO00o / ii11i
 plugintools . add_item (

 title = "[COLORyellow]1960's Classic Grand Prix[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0oo0OO0 + "/" ,
 thumbnail = "http://www.stirlingmoss.com/sites/default/files/photos/6462B-W.JPG" ,
 folder = True )
 if 20 - 20: i11iI
 plugintools . add_item (

 title = "[COLORyellow]1970's Classic Grand Prix[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1i1iiI1 + "/" ,
 thumbnail = "http://fivestars-limousines.com/wp-content/uploads/fivestars-limousines_blog_grand-prix-monaco-historique.jpg" ,
 folder = True )
 if 77 - 77: oo00000o0 / iiI11
 plugintools . add_item (

 title = "[COLORyellow]Ferrari Videos[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + iiIIIII1i1iI + "/" ,
 thumbnail = "http://fm.cnbc.com/applications/cnbc.com/resources/img/editorial/2016/08/09/103855564-Ferrari_LaFerrari_2.530x298.png?v=1470743308" ,
 folder = True )
 if 98 - 98: ii11i / II1ii / i11iIiiIii / i11iI
 plugintools . add_item (

 title = "[COLORyellow]lamborghini Videos[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0oO0 + "/" ,
 thumbnail = "http://images.cdn.autocar.co.uk/sites/autocar.co.uk/files/styles/gallery_slide/public/images/car-reviews/first-drives/legacy/lambo-qwedgfhn-553.jpg?itok=qiW8Ovax" ,
 folder = True )
 if 28 - 28: OOoOoo00oo - iiIIi1IiIi11 . iiIIi1IiIi11 + oo00000o0 - oOooOoO0Oo0O + iIIi1iI1II111
 plugintools . add_item (

 title = "[COLORred]F1[/COLOR][COLORyellow] Full Races[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + oo00 + "/" ,
 thumbnail = "https://www.formula1.com/content/fom-website/en/championship/races/2016/Italy/_jcr_content/par/manual_gallery_0/image2.img.640.medium.jpg" ,
 folder = True )
 if 95 - 95: Ooo0 % I1 . iIIi1iI1II111
 plugintools . add_item (

 title = "[COLORred]Super[/COLOR][COLORyellow]Cars[/COLOR]" ,
 url = "plugin://plugin.video.youtube/playlist/" + o00 + "/" ,
 thumbnail = "http://moneyinc.com/wp-content/uploads/2016/08/The-Best-Supercars-From-The-2016-Geneva-Motor-Show-Bugatti-Chiron.png" ,
 folder = True )
 if 15 - 15: O0OooO0OOooo / oOOOO . oOOOO - II1ii
I11i1i11i1I ( ) # dd678faae9ac167bc83abf78e5cb2f3f0688d3a3
]')